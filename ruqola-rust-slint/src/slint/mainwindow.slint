/*
 * SPDX-FileCopyrightText: 2023-2025 Laurent Montel <laurent.montel@kdab.com>
 *
 * SPDX-License-Identifier: LGPL-2.0-or-later
 */

import { Button, LineEdit, StandardListView, StandardButton, AboutSlint} from "std-widgets.slint";

import { MainPage } from "screens/mainpage.slint";
import { SelectAccountsPage } from "screens/selectaccount.slint";

// Need to import/export singleton for using it outside slint
import { ScreenController, PageType } from "singletons/screencontroller.slint";
export { ScreenController, PageType }

import { AboutDialog } from "dialogs/aboutdialog.slint";
export { AboutDialog }

import { AccountSettingsDialog } from "dialogs/accountsettings.slint";
export { AccountSettingsDialog }

import { AccountConfigurationDialog } from "dialogs/accountconfiguration.slint";
export { AccountConfigurationDialog }

export component RuqolaWindow inherits Window {
    title: @tr("Ruqola-Rust");
    callback send_message(string);
    callback show_configure_accounts();
    callback connect_account(int);
    callback show_accounts();
    callback disconnect_account();
    callback quit();
    
    // Add menubar
    MenuBar {
        Menu {
            title: @tr("MenuBar" => "File");
            MenuItem {
                title: @tr("MenuBar" => "Add Server...");
                activated => {
                    // TODO add dialogbox
                }
            }

            MenuItem {
                title: @tr("MenuBar" => "Quit");
                activated => {
                    quit();
                }
            }
        }

        Menu {
            title: @tr("MenuBar" => "Help");
            MenuItem {
                title: @tr("MenuBar" => "About...");
                activated => {
                    about-dialog.show();                 // TODO add dialogbox
                }
            }
        }
    }

    preferred-width: 700px;
    preferred-height: 500px;

    in property <[StandardListViewItem]> account-model;
    MainPage {
        visible: ScreenController.resolved-page-id == self.screen-id;
        quit => {
            root.quit();
        }
        show-configure-accounts => {
            root.show_configure_accounts();
        }

        show_accounts => {
            ScreenController.resolved-page-id = PageType.SelectAccount;
            root.show_accounts();
        }
        send_message(str) => {
            root.send_message(str)
        }
        disconnect_account => {
            root.disconnect_account();
        }
    }

    SelectAccountsPage {
        visible: ScreenController.resolved-page-id == self.screen-id;
        account-model: root.account-model;
        connect_account(index) => {
            ScreenController.resolved-page-id = PageType.MainPage;
            connect_account(index)
        }
    }

    about-dialog := PopupWindow {
        x: 0;
        y: 0;
        width: root.height;
        height: root.height;
        AboutDialog { }
    }
}
